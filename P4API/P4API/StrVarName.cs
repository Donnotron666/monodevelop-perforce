/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.33
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace P4API {

using System;
using System.Runtime.InteropServices;

public class StrVarName : StrRef {
  private HandleRef swigCPtr;

  internal StrVarName(IntPtr cPtr, bool cMemoryOwn) : base(p4apiPINVOKE.StrVarNameUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(StrVarName obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~StrVarName() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        p4apiPINVOKE.delete_StrVarName(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public StrVarName(string buf, int length) : this(p4apiPINVOKE.new_StrVarName__SWIG_0(buf, length), true) {
  }

  public StrVarName(StrPtr name, int x) : this(p4apiPINVOKE.new_StrVarName__SWIG_1(StrPtr.getCPtr(name), x), true) {
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public StrVarName(StrPtr name, int x, int y) : this(p4apiPINVOKE.new_StrVarName__SWIG_2(StrPtr.getCPtr(name), x, y), true) {
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
