/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.33
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace P4API {

using System;
using System.Runtime.InteropServices;

public class ClientApi : StrDict {
  private HandleRef swigCPtr;

  internal ClientApi(IntPtr cPtr, bool cMemoryOwn) : base(p4apiPINVOKE.ClientApiUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ClientApi obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ClientApi() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        p4apiPINVOKE.delete_ClientApi(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ClientApi() : this(p4apiPINVOKE.new_ClientApi__SWIG_0(), true) {
  }

  public void SetTrans(int output, int content, int fnames, int dialog) {
    p4apiPINVOKE.ClientApi_SetTrans__SWIG_0(swigCPtr, output, content, fnames, dialog);
  }

  public void SetTrans(int output, int content, int fnames) {
    p4apiPINVOKE.ClientApi_SetTrans__SWIG_1(swigCPtr, output, content, fnames);
  }

  public void SetTrans(int output, int content) {
    p4apiPINVOKE.ClientApi_SetTrans__SWIG_2(swigCPtr, output, content);
  }

  public void SetTrans(int output) {
    p4apiPINVOKE.ClientApi_SetTrans__SWIG_3(swigCPtr, output);
  }

  public void SetProtocol(string p, string v) {
    p4apiPINVOKE.ClientApi_SetProtocol(swigCPtr, p, v);
  }

  public void SetProtocolV(string p) {
    p4apiPINVOKE.ClientApi_SetProtocolV(swigCPtr, p);
  }

  public StrPtr GetProtocol(string v) {
    IntPtr cPtr = p4apiPINVOKE.ClientApi_GetProtocol(swigCPtr, v);
    StrPtr ret = (cPtr == IntPtr.Zero) ? null : new StrPtr(cPtr, false);
    return ret;
  }

  public void Init(Error e) {
    p4apiPINVOKE.ClientApi_Init(swigCPtr, Error.getCPtr(e));
  }

  public void Run(string func, ClientUser ui) {
    p4apiPINVOKE.ClientApi_Run__SWIG_0(swigCPtr, func, ClientUser.getCPtr(ui));
  }

  public int Final(Error e) {
    int ret = p4apiPINVOKE.ClientApi_Final(swigCPtr, Error.getCPtr(e));
    return ret;
  }

  public int Dropped() {
    int ret = p4apiPINVOKE.ClientApi_Dropped(swigCPtr);
    return ret;
  }

  public int GetErrors() {
    int ret = p4apiPINVOKE.ClientApi_GetErrors(swigCPtr);
    return ret;
  }

  public void RunTag(string func, ClientUser ui) {
    p4apiPINVOKE.ClientApi_RunTag(swigCPtr, func, ClientUser.getCPtr(ui));
  }

  public void WaitTag(ClientUser ui) {
    p4apiPINVOKE.ClientApi_WaitTag__SWIG_0(swigCPtr, ClientUser.getCPtr(ui));
  }

  public void WaitTag() {
    p4apiPINVOKE.ClientApi_WaitTag__SWIG_1(swigCPtr);
  }

  public void SetCharset(string c) {
    p4apiPINVOKE.ClientApi_SetCharset__SWIG_0(swigCPtr, c);
  }

  public void SetClient(string c) {
    p4apiPINVOKE.ClientApi_SetClient__SWIG_0(swigCPtr, c);
  }

  public void SetCwd(string c) {
    p4apiPINVOKE.ClientApi_SetCwd__SWIG_0(swigCPtr, c);
  }

  public void SetHost(string c) {
    p4apiPINVOKE.ClientApi_SetHost__SWIG_0(swigCPtr, c);
  }

  public void SetLanguage(string c) {
    p4apiPINVOKE.ClientApi_SetLanguage__SWIG_0(swigCPtr, c);
  }

  public void SetPassword(string c) {
    p4apiPINVOKE.ClientApi_SetPassword__SWIG_0(swigCPtr, c);
  }

  public void SetPort(string c) {
    p4apiPINVOKE.ClientApi_SetPort__SWIG_0(swigCPtr, c);
  }

  public void SetUser(string c) {
    p4apiPINVOKE.ClientApi_SetUser__SWIG_0(swigCPtr, c);
  }

  public void SetProg(string c) {
    p4apiPINVOKE.ClientApi_SetProg__SWIG_0(swigCPtr, c);
  }

  public void SetVersion(string c) {
    p4apiPINVOKE.ClientApi_SetVersion__SWIG_0(swigCPtr, c);
  }

  public void SetTicketFile(string c) {
    p4apiPINVOKE.ClientApi_SetTicketFile__SWIG_0(swigCPtr, c);
  }

  public void SetCharset(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetCharset__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetClient(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetClient__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetCwd(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetCwd__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetHost(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetHost__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetLanguage(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetLanguage__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetPassword(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetPassword__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetPort(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetPort__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetUser(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetUser__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetProg(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetProg__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetVersion(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetVersion__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetTicketFile(StrPtr c) {
    p4apiPINVOKE.ClientApi_SetTicketFile__SWIG_1(swigCPtr, StrPtr.getCPtr(c));
  }

  public void SetBreak(SWIGTYPE_p_KeepAlive k) {
    p4apiPINVOKE.ClientApi_SetBreak(swigCPtr, SWIGTYPE_p_KeepAlive.getCPtr(k));
  }

  public void DefineCharset(string c, Error e) {
    p4apiPINVOKE.ClientApi_DefineCharset(swigCPtr, c, Error.getCPtr(e));
  }

  public void DefineClient(string c, Error e) {
    p4apiPINVOKE.ClientApi_DefineClient(swigCPtr, c, Error.getCPtr(e));
  }

  public void DefineHost(string c, Error e) {
    p4apiPINVOKE.ClientApi_DefineHost(swigCPtr, c, Error.getCPtr(e));
  }

  public void DefineLanguage(string c, Error e) {
    p4apiPINVOKE.ClientApi_DefineLanguage(swigCPtr, c, Error.getCPtr(e));
  }

  public void DefinePassword(string c, Error e) {
    p4apiPINVOKE.ClientApi_DefinePassword(swigCPtr, c, Error.getCPtr(e));
  }

  public void DefinePort(string c, Error e) {
    p4apiPINVOKE.ClientApi_DefinePort(swigCPtr, c, Error.getCPtr(e));
  }

  public void DefineUser(string c, Error e) {
    p4apiPINVOKE.ClientApi_DefineUser(swigCPtr, c, Error.getCPtr(e));
  }

  public StrPtr GetCharset() {
    StrPtr ret = new StrPtr(p4apiPINVOKE.ClientApi_GetCharset(swigCPtr), false);
    return ret;
  }

  public StrPtr GetClient() {
    StrPtr ret = new StrPtr(p4apiPINVOKE.ClientApi_GetClient(swigCPtr), false);
    return ret;
  }

  public StrPtr GetCwd() {
    StrPtr ret = new StrPtr(p4apiPINVOKE.ClientApi_GetCwd(swigCPtr), false);
    return ret;
  }

  public StrPtr GetHost() {
    StrPtr ret = new StrPtr(p4apiPINVOKE.ClientApi_GetHost(swigCPtr), false);
    return ret;
  }

  public StrPtr GetLanguage() {
    StrPtr ret = new StrPtr(p4apiPINVOKE.ClientApi_GetLanguage(swigCPtr), false);
    return ret;
  }

  public StrPtr GetOs() {
    StrPtr ret = new StrPtr(p4apiPINVOKE.ClientApi_GetOs(swigCPtr), false);
    return ret;
  }

  public StrPtr GetPassword() {
    StrPtr ret = new StrPtr(p4apiPINVOKE.ClientApi_GetPassword(swigCPtr), false);
    return ret;
  }

  public StrPtr GetPort() {
    StrPtr ret = new StrPtr(p4apiPINVOKE.ClientApi_GetPort(swigCPtr), false);
    return ret;
  }

  public StrPtr GetUser() {
    StrPtr ret = new StrPtr(p4apiPINVOKE.ClientApi_GetUser(swigCPtr), false);
    return ret;
  }

  public StrPtr GetConfig() {
    StrPtr ret = new StrPtr(p4apiPINVOKE.ClientApi_GetConfig(swigCPtr), false);
    return ret;
  }

  public void SetIgnorePassword() {
    p4apiPINVOKE.ClientApi_SetIgnorePassword(swigCPtr);
  }

  public ClientApi(ClientUser ui) : this(p4apiPINVOKE.new_ClientApi__SWIG_1(ClientUser.getCPtr(ui)), true) {
  }

  public void SetUi(ClientUser i) {
    p4apiPINVOKE.ClientApi_SetUi(swigCPtr, ClientUser.getCPtr(i));
  }

  public void Run(string func) {
    p4apiPINVOKE.ClientApi_Run__SWIG_1(swigCPtr, func);
  }

}

}
