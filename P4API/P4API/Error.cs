/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.33
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace P4API {

using System;
using System.Runtime.InteropServices;

public class Error : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Error(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Error obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Error() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        p4apiPINVOKE.delete_Error(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public Error() : this(p4apiPINVOKE.new_Error(), true) {
  }

  public void Clear() {
    p4apiPINVOKE.Error_Clear(swigCPtr);
  }

  public int Test() {
    int ret = p4apiPINVOKE.Error_Test(swigCPtr);
    return ret;
  }

  public int IsInfo() {
    int ret = p4apiPINVOKE.Error_IsInfo(swigCPtr);
    return ret;
  }

  public int IsWarning() {
    int ret = p4apiPINVOKE.Error_IsWarning(swigCPtr);
    return ret;
  }

  public int IsError() {
    int ret = p4apiPINVOKE.Error_IsError(swigCPtr);
    return ret;
  }

  public int IsFatal() {
    int ret = p4apiPINVOKE.Error_IsFatal(swigCPtr);
    return ret;
  }

  public int GetSeverity() {
    int ret = p4apiPINVOKE.Error_GetSeverity(swigCPtr);
    return ret;
  }

  public string FmtSeverity() {
    string ret = p4apiPINVOKE.Error_FmtSeverity(swigCPtr);
    return ret;
  }

  public int GetGeneric() {
    int ret = p4apiPINVOKE.Error_GetGeneric(swigCPtr);
    return ret;
  }

  public Error Set(ErrorId id) {
    Error ret = new Error(p4apiPINVOKE.Error_Set__SWIG_0(swigCPtr, ErrorId.getCPtr(id)), false);
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Error Set(ErrorSeverity s, string fmt) {
    Error ret = new Error(p4apiPINVOKE.Error_Set__SWIG_1(swigCPtr, (int)s, fmt), false);
    return ret;
  }

  public void Sys(string op, string arg) {
    p4apiPINVOKE.Error_Sys(swigCPtr, op, arg);
  }

  public void Net(string op, string arg) {
    p4apiPINVOKE.Error_Net(swigCPtr, op, arg);
  }

  public ErrorId GetId(int i) {
    IntPtr cPtr = p4apiPINVOKE.Error_GetId(swigCPtr, i);
    ErrorId ret = (cPtr == IntPtr.Zero) ? null : new ErrorId(cPtr, false);
    return ret;
  }

  public int CheckId(ErrorId id) {
    int ret = p4apiPINVOKE.Error_CheckId(swigCPtr, ErrorId.getCPtr(id));
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public StrDict GetDict() {
    IntPtr cPtr = p4apiPINVOKE.Error_GetDict(swigCPtr);
    StrDict ret = (cPtr == IntPtr.Zero) ? null : new StrDict(cPtr, false);
    return ret;
  }

  public void Fmt(StrBuf buf, int opts) {
    p4apiPINVOKE.Error_Fmt__SWIG_0(swigCPtr, StrBuf.getCPtr(buf), opts);
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Fmt(StrBuf buf) {
    p4apiPINVOKE.Error_Fmt__SWIG_2(swigCPtr, StrBuf.getCPtr(buf));
  }

  public void Marshall0(StrBuf arg0) {
    p4apiPINVOKE.Error_Marshall0(swigCPtr, StrBuf.getCPtr(arg0));
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Marshall1(StrDict arg0) {
    p4apiPINVOKE.Error_Marshall1(swigCPtr, StrDict.getCPtr(arg0));
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Marshall2(StrBuf arg0) {
    p4apiPINVOKE.Error_Marshall2(swigCPtr, StrBuf.getCPtr(arg0));
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void UnMarshall0(StrPtr arg0) {
    p4apiPINVOKE.Error_UnMarshall0(swigCPtr, StrPtr.getCPtr(arg0));
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void UnMarshall1(StrDict arg0) {
    p4apiPINVOKE.Error_UnMarshall1(swigCPtr, StrDict.getCPtr(arg0));
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void UnMarshall2(StrPtr arg0) {
    p4apiPINVOKE.Error_UnMarshall2(swigCPtr, StrPtr.getCPtr(arg0));
    if (p4apiPINVOKE.SWIGPendingException.Pending) throw p4apiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Snap() {
    p4apiPINVOKE.Error_Snap(swigCPtr);
  }

  public void Dump(string trace) {
    p4apiPINVOKE.Error_Dump(swigCPtr, trace);
  }

}

}
