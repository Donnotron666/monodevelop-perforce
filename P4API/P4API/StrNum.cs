/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.33
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace P4API {

using System;
using System.Runtime.InteropServices;

public class StrNum : StrPtr {
  private HandleRef swigCPtr;

  internal StrNum(IntPtr cPtr, bool cMemoryOwn) : base(p4apiPINVOKE.StrNumUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(StrNum obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~StrNum() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        p4apiPINVOKE.delete_StrNum(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public StrNum() : this(p4apiPINVOKE.new_StrNum__SWIG_0(), true) {
  }

  public StrNum(int v) : this(p4apiPINVOKE.new_StrNum__SWIG_1(v), true) {
  }

  public StrNum(int ok, int v) : this(p4apiPINVOKE.new_StrNum__SWIG_2(ok, v), true) {
  }

  public void Set(int v) {
    p4apiPINVOKE.StrNum_Set(swigCPtr, v);
  }

}

}
